---
- hosts: remote
  become: true
  vars_files:
    - vars/default.yml
    - vars/proxy.yml

  tasks:
    - name: Install prerequisites
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude' ]

    - name: Install Apache
      apt: name=apache2 update_cache=yes state=latest

    - name: Change Apache default port
      lineinfile:
          path: /etc/apache2/ports.conf
          regexp: "Listen 80" 
          line: "Listen 8080"
          state: present
          backup: yes

    - name: Install Nginx
      apt: name=nginx update_cache=yes state=latest

    - name: Configure nginx proxy
      template:
        src: "files/nginx.conf.j2"
        dest: "/etc/nginx/sites-enabled/reverse-proxy.conf"
   
    - name: Removing default Nginx page
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Starting new nginx reverse-conf
      command: echo "this task will restart the nginx"
      notify: Restart Nginx

    - name: Create document root
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        mode: '0755'

    - name: Copy index test page
      template:
        src: "files/index.html.j2"
        dest: "/var/www/{{ http_host }}/index.html"
        mode: '0644'

    - name: Set up Apache virtuahHost
      template:
        src: "files/apache.conf.j2"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"

    - name: Enable new site
      shell: /usr/sbin/a2ensite {{ http_conf }}
      notify: Reload Apache

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      when: disable_default
      notify: Reload Apache

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted

    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

    - name: restart Nginx
      service: name=nginx state=restarted
      listen: "Restart Nginx"
